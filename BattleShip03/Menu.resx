<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxBattleShip.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>